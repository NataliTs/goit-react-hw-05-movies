{"version":3,"file":"static/js/387.dda63b52.chunk.js","mappings":"wQAEaA,E,QAAcC,GAAAA,GAAH,+C,mBC4CxB,EAxCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,WAAMR,GAAN,yFAEpBM,GAAa,GAFO,UAGMG,EAAAA,EAAAA,IAAWT,GAHjB,gBAGZU,EAHY,EAGZA,QACRN,EAAWM,GAJS,gDAMpBC,MAAM,KAAMC,SANQ,yBAQpBN,GAAa,GARO,4EAAH,sDAWrBE,EAAgBR,EACjB,GAAE,CAACA,KAGF,kCACGK,QADH,IACGA,EAAAA,GAAa,SAACQ,EAAA,EAAD,IACbV,EAAQW,QACP,wBACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,UAAClB,EAAD,uBAAuBkB,EAAOC,UAAsB,KACpD,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,sEAIP,C,mMC1CKC,EAAW,+BACXC,EAAU,mCAGHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OAHF,oBAGE,oBACmBC,IAFX,uBACvBG,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMzB,GAAN,yFACHuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,oBACmBqB,EADnB,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZE,EAAW,mCAAG,WAAM1B,GAAN,yFACFuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,EAD3B,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOXf,EAAU,mCAAG,WAAMT,GAAN,yFACDuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,EAD3B,oBADC,uBAChBG,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAgB,mCAAG,WAAMC,GAAN,yFACPL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCO,EADhC,+CADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewTitle = styled.h3`\n  padding: 16px 32px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/API';\nimport { useEffect, useState } from 'react';\nimport { ReviewTitle } from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviewsMovie = async movieId => {\n      try {\n        setIsLoading(true);\n        const { results } = await getReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewsMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading ?? <Loader />}\n      {reviews.length ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <ReviewTitle> Author: {review.author}</ReviewTitle>{' '}\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5de976d9fa7c36b2117f7a9c7cc0a525';\nconst TRENDING_PARAM = '/trending/all/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_PARAM}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["ReviewTitle","styled","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getReviewsMovie","getReviews","results","alert","message","Loader","length","map","review","author","content","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","getMovieById","getCastById","getMovieBySearch","query"],"sourceRoot":""}