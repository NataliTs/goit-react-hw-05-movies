{"version":3,"file":"static/js/439.8b9ee3d6.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding: 8px;\n`;\n\nexport const List = styled.ul`\n  padding-left: 88px;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 20px;\n  margin-bottom: 8px;\n`;\n\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n\n  &:hover,\n  &:focus  {\n    color: ${p => p.theme.colors.acentText}\n    \n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GoBackLink = styled(Link)`text-decoration: none;\ndisplay: flex;\nfont-size: 20px;\nfont-weight: 500;\npadding: 4px 24px;\n\ncolor: ${p => p.theme.colors.text};\n  &:active{\n    color: ${p => p.theme.colors.acentText};\n    `;\n\nexport const MovieCard = styled.section`\n  display: flex;\n  padding: 0 24px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 0 24px;\n`;\n\nexport const MovieStyled = styled.div`\n  padding: 8px 24px;\n`;\n\nexport const InfoCard = styled.div`\n  padding: 12px 24px;\n`;\n","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../services/API';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { Loader } from 'components/Loader/Loader';\nimport { LinkItem, ListItem } from 'components/MovieList/MovieList.styled';\nimport {\n  GoBackLink,\n  InfoCard,\n  MovieCard,\n  MovieInfo,\n  MovieStyled,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  // const [error, setError] = useState(null);\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    selectedMovie;\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n  const location = useLocation();\n  const baclLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getSelectedMovie = async movieId => {\n      try {\n        setIsLoading(true);\n        const movieData = await getMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    getSelectedMovie(movieId);\n  }, [movieId]);\n\n  const posterPathUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : `https://dummyimage.com/400x600/f2eaf2/34343b.jpg&text=Poster+not+available`;\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n  console.log(baclLinkRef);\n  return (\n    <MovieStyled>\n      {isLoading ?? <Loader />}\n      <GoBackLink to={baclLinkRef.current}>\n        <HiArrowNarrowLeft style={{ width: '25px', height: '25px' }} />\n        Go back\n      </GoBackLink>\n      <MovieCard>\n        <img src={posterPathUrl} alt={`poster ${title}`} />\n        <MovieInfo>\n          <h2>\n            {title ?? 'Unknown'} ({releaseYear})\n          </h2>\n          <p>User Score: {userScore}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n\n          {genres && genres.length > 0 && (\n            <div>\n              <h3>Genres</h3>\n              <p>{genres.map(genre => genre.name).join(',')}</p>\n            </div>\n          )}\n        </MovieInfo>\n      </MovieCard>\n      <InfoCard>\n        <h3>Additional information</h3>\n        <ul>\n          <ListItem>\n            <LinkItem to=\"cast\">Cast</LinkItem>\n          </ListItem>\n          <ListItem>\n            <LinkItem to=\"reviews\">Reviews</LinkItem>\n          </ListItem>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </InfoCard>\n    </MovieStyled>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5de976d9fa7c36b2117f7a9c7cc0a525';\nconst TRENDING_PARAM = '/trending/all/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}${TRENDING_PARAM}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCastById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getMovieBySearch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["Title","styled","List","ListItem","LinkItem","Link","p","theme","colors","acentText","GoBackLink","text","MovieCard","MovieInfo","MovieStyled","InfoCard","movieId","useParams","useState","selectedMovie","setSelectedMovie","isLoading","setIsLoading","title","release_date","poster_path","vote_average","overview","genres","releaseDate","Date","releaseYear","isNaN","getFullYear","location","useLocation","baclLinkRef","useRef","state","from","useEffect","getSelectedMovie","getMovieById","movieData","alert","message","posterPathUrl","userScore","toFixed","console","log","Loader","to","current","style","width","height","src","alt","length","map","genre","name","join","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","axios","data","getCastById","getReviews","getMovieBySearch","query"],"sourceRoot":""}